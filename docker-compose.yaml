services:
  web:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: fastapi_app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
    environment:
      RABBITMQ_HOST: "rabbitmq"
      CORS_ORIGIN: "${CORS_ORIGIN:-localhost:3000}"
      PICTURES_DIR: /pictures
    volumes:
      - pictures-data:/pictures
    restart: on-failure
    networks:
      - my_network

  db:
    image: postgres:17.0
    container_name: postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - my_network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    networks:
      - my_network

  worker:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: worker
    depends_on:
      - rabbitmq
      - web
    environment:
      - RABBITMQ_HOST=rabbitmq
    networks:
      - my_network

networks:
  my_network:
    name: my_network
    driver: bridge

volumes:
  pictures-data:
  postgres-data: