"""Initial schema

Revision ID: 000_initial_schema
Revises: 
Create Date: 2025-08-26 10:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '000_initial_schema'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('detectors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('agent_code', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_detectors_id'), 'detectors', ['id'], unique=False)
    op.create_table('radioisotopes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('activity', sa.Float(), nullable=False),
    sa.Column('halflife', sa.Float(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_radioisotopes_id'), 'radioisotopes', ['id'], unique=False)
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('color', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tags_id'), 'tags', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('experiments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('start_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('end_date', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('coordinator_id', sa.Integer(), nullable=False),
    sa.Column('detector_id', sa.Integer(), nullable=False),
    sa.Column('reference_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['coordinator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['detector_id'], ['detectors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_experiments_id'), 'experiments', ['id'], unique=False)
    op.create_table('measurements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('directory', sa.String(), nullable=False),
    sa.Column('number_of_files', sa.Integer(), nullable=False),
    sa.Column('patient_reference', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('shifter_id', sa.Integer(), nullable=False),
    sa.Column('experiment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiments.id'], ),
    sa.ForeignKeyConstraint(['shifter_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_measurements_id'), 'measurements', ['id'], unique=False)
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('measurement_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['measurement_id'], ['measurements.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comments_id'), 'comments', ['id'], unique=False)
    op.create_table('data_entry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('histo_dir', sa.String(), nullable=False),
    sa.Column('acquisition_date', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('measurement_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['measurement_id'], ['measurements.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_data_entry_id'), 'data_entry', ['id'], unique=False)
    op.create_table('meteo_readouts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('station_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('agent_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('p_atm', sa.Float(), nullable=False),
    sa.Column('p_1', sa.Float(), nullable=False),
    sa.Column('p_2', sa.Float(), nullable=False),
    sa.Column('hum_1', sa.Float(), nullable=False),
    sa.Column('hum_2', sa.Float(), nullable=False),
    sa.Column('temp_1', sa.Float(), nullable=False),
    sa.Column('temp_2', sa.Float(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('measurement_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['measurement_id'], ['measurements.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_meteo_readouts_id'), 'meteo_readouts', ['id'], unique=False)
    op.create_table('radioisotope_measurement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('radioisotope_id', sa.Integer(), nullable=False),
    sa.Column('measurement_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['measurement_id'], ['measurements.id'], ),
    sa.ForeignKeyConstraint(['radioisotope_id'], ['radioisotopes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_radioisotope_measurement_id'), 'radioisotope_measurement', ['id'], unique=False)
    op.create_table('tag_measurement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('measurement_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['measurement_id'], ['measurements.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tag_measurement_id'), 'tag_measurement', ['id'], unique=False)
    op.create_table('comment_pictures',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comment_pictures_id'), 'comment_pictures', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_comment_pictures_id'), table_name='comment_pictures')
    op.drop_table('comment_pictures')
    op.drop_index(op.f('ix_tag_measurement_id'), table_name='tag_measurement')
    op.drop_table('tag_measurement')
    op.drop_index(op.f('ix_radioisotope_measurement_id'), table_name='radioisotope_measurement')
    op.drop_table('radioisotope_measurement')
    op.drop_index(op.f('ix_meteo_readouts_id'), table_name='meteo_readouts')
    op.drop_table('meteo_readouts')
    op.drop_index(op.f('ix_data_entry_id'), table_name='data_entry')
    op.drop_table('data_entry')
    op.drop_index(op.f('ix_comments_id'), table_name='comments')
    op.drop_table('comments')
    op.drop_index(op.f('ix_measurements_id'), table_name='measurements')
    op.drop_table('measurements')
    op.drop_index(op.f('ix_experiments_id'), table_name='experiments')
    op.drop_table('experiments')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_tags_id'), table_name='tags')
    op.drop_table('tags')
    op.drop_index(op.f('ix_radioisotopes_id'), table_name='radioisotopes')
    op.drop_table('radioisotopes')
    op.drop_index(op.f('ix_detectors_id'), table_name='detectors')
    op.drop_table('detectors')
    # ### end Alembic commands ###